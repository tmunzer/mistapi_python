[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mistapi"
version = "0.55.15a"
authors = [{name="Thomas Munzer", email="tmunzer@juniper.net"}]
description = "Python package to simplify the Mist System APIs usage"
keywords = ["Mist", "Juniper", "API"]
license = { text = "MIT License" }
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "Topic :: System :: Networking",
  "Development Status :: 4 - Beta",
]
dependencies = [
  'python-dotenv',
  'requests > 2.24',
  'tabulate > 0.8.5',
  'deprecation > 2.0.0',
]

[project.urls]
"Source" = "https://github.com/tmunzer/mistapi_python"
"Bug Tracker" = "https://github.com/tmunzer/mistapi_python/issues"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Exclude API files that happen to start with "test"
norecursedirs = ["src/mistapi/api/*/utils"]
collect_ignore = [
  "src/mistapi/api/v1/utils/test_smsglobal.py",
  "src/mistapi/api/v1/utils/test_telstra.py",
  "src/mistapi/api/v1/utils/test_twilio.py",
]

addopts = [
  "-v",
  "--tb=short",
  "--strict-markers",
  "--disable-warnings",
  "--cov=src/mistapi",
  "--cov-report=html",
  "--cov-report=term-missing",
  "--cov-fail-under=50",
  # Exclude autogenerated API code from coverage
  "--cov-config=pyproject.toml",
]

[tool.coverage.run]
# Only measure coverage on core library code, not autogenerated API
source = ["src/mistapi"]
omit = [
  "src/mistapi/api/v1/*", # Exclude all autogenerated API code
  "src/mistapi/cli.py",   # CLI can be tested separately if needed
  "*/test_*.py",
  "*/__pycache__/*",
]

[tool.coverage.report]
# Don't fail on missing coverage for autogenerated code
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
]

markers = [
  "unit: Unit tests",
  "integration: Integration tests",
  "slow: Slow running tests",
  "auth: Authentication related tests",
  "api: API endpoint tests",
  "mock: Tests using mocks",
  "real: Tests requiring real API calls (use sparingly)",
]
